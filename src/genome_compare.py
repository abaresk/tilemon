'''
Compare the genomes of different tilemons

	* Uses Levenshtein distance to calculate the amount of dissimilarity
	  between two genomes
'''
import numpy as np

def levDistance(str1, str2):
	m = len(str1)+1
	n = len(str2)+1
	dist = np.zeros((m,n)) 	# distance matrix
							# dist[str1][str2]

	for i in range(1,m):
		dist[i][0] = i

	for j in range(1,n):
		dist[0][j] = j

	for j in range(1,n):
		for i in range(1,m):
			cost = 0 if str1[i-1] == str2[j-1] else 1
			dist[i][j] = min(dist[i-1][j] + 1, dist[i][j-1] + 1, dist[i-1][j-1] + cost)

	return dist[m-1][n-1]
	
# # Test
# a = 'tttagcttgtttaagacgttagcgtatcccttttaacaagccgcaaggtcgaacgcatcctcgttctgacttgcccttgagattgtaattatgtatgtgtgctagctgcctaaatgccgaggcacatgctcgagttgactccatcaaggttatgcactttacgaacgcgaggccttttacgtaagggtttgaagactcacaaagactgaggcttagtctacctttccactgcgcggctgaggtggctcgagcatcttgcaagagagtgtggcaggtgtcgatcggttagatccaagagcctagatctactggaatcgtcgcgaatccggttacctcacctccgttacacgccagtggaagagactaagaaacagcgtcaatcacgcccggtgtcatctctctcaccgcgatcggggtgctcttaataatcaaatcacggcggaaggggcaggactggttcgtcgccgaacggaagcaccattcggaaataatcttcgtgaacatgacaccagaccatcgtcgatggcctactacgccgtaatatcttcaaactgcctcacacagacccataacgtcttggtaataaactttagactcttaacaaagggaatatatttaggaacgctttccggtttcaagtaacggacgatagggctcaatacaaccgtacccccccggcttcgcgatgggtattaagcagcgtttatgcgctgactaattagtagttccgctcgatgcatagccagacacggaaaatcgattaggctatgcgatgatcgtcacggcggttaataggctgcctacgcttggaagcctcctggtcccctccgtccttctgaggtgtttcgattagctcgcattatacaggaaccgtcatcgataccatccgttcaccggacgtcgacgaaattagcaggaagacggctaagcttccacacagggggctcgatgtcggggtgtcttcgggcgttcatgtcgtttatcgagtaccgactcatttcgagtaccacagaatctttaaggcttggcctacgtatccctcacactcttacattatgaggccctcgcacaaagtgggtccctcaaggcatatagggccggcaaaacaatatcccacagcgtctcaccgctccagggtaatgtacttctctgctacagggttgcttttccaaaagattaaggatgcgacgttctgtcgagtcagaccattacgtcaggcagcctcatgcgcattctgccaacataccataagacctcgattcgctattgaagggcgtactccggaaagaatgtacaaaccgaaggttctgggcataagaccgcaattgctaagtaaccacgtcccctactattccatatatggtcgtcataacatgttgctcgccacgacaacgttttgaagccggggtctaagccatcgtacgacggagagctcttgaacgtgcggacatatgggcctttgtggaggaagccctgaggcagaccgattactgcacaccgcaattagacctcgcgcggcgtatcgttcatgcgtgtcacctaaagaccaaaggcgacgctgcaagtcggtgggaagaagtggcgctgcgcttttggaaccaccttaatcgtgagtgacacttgccggaacaaaactctgccaggccaccccttacacctgctgcgggattccaccgtcagagattatacatataaacttatactaacaatcatccctctcgggctcctgtgacataagctatttcatagtggt'
# b = 'cgtcatcgataccatccgttcaccggacgtcgacgaaattagcaggaagacggctaagcttccacacagggggctcgatgtcggggtgtcttcgggcgttcatgtcgtttatcgagtaccgactcatttcgagtaccacagaatctttaaggcttggcctacgtatccctcacactcttacattatgaggccctcgcacaaagtgggtccctcaaggcatatagggccggcaaaacaatatcccacagcgtctcaccgctccagggtaatgtacttctctgctacagggttgcttttccaaaagattaaggatgcgacgttctgtcgagtcagaccattacgtcaggcagcctcatgcgcattctgccaacataccataagacctcgattcgctattgaagggcgtactccggaaagaatgtacaaaccgaaggttctgggcataagaccgcaattgctaagtaaccacgtcccctactattccatatatggtcgtcataacatgttgctcgccacgacaacgttttgaagccggggtctaagccatcgtacgacggagagctcttgaacgtgcggacatatgggcctttgtggaggaagccctgaggcagaccgattactgcacaccgcaattagacctcgcgcggcgtatcgttcatgcgtgtcacctaaagaccaaaggcgacgctgcaagtcggtgggaagaagtggcgctgcgcttttggaaccaccttaatcgtgagtgacacttgccggaacaaaactctgccaggccaccccttacacctgctgcgggattccaccgtcagagattatacatataaacttatactaacaatcatccctctcgggctcctgtgacataagctatttcatagtggttttagcttgtttaagacgttagcgtatcccttttaacaagccgcaaggtcgaacgcatcctcgttctgacttgcccttgagattgtaattatgtatgtgtgctagctgcctaaatgccgaggcacatgctcgagttgactccatcaaggttatgcactttacgaacgcgaggccttttacgtaagggtttgaagactcacaaagactgaggcttagtctacctttccactgcgcggctgaggtggctcgagcatcttgcaagagagtgtggcaggtgtcgatcggttagatccaagagcctagatctactggaatcgtcgcgaatccggttacctcacctccgttacacgccagtggaagagactaagaaacagcgtcaatcacgcccggtgtcatctctctcaccgcgatcggggtgctcttaataatcaaatcacggcggaaggggcaggactggttcgtcgccgaacggaagcaccattcggaaataatcttcgtgaacatgacaccagaccatcgtcgatggcctactacgccgtaatatcttcaaactgcctcacacagacccataacgtcttggtaataaactttagactcttaacaaagggaatatatttaggaacgctttccggtttcaagtaacggacgatagggctcaatacaaccgtacccccccggcttcgcgatgggtattaagcagcgtttatgcgctgactaattagtagttccgctcgatgcatagccagacacggaaaatcgattaggctatgcgatgatcgtcacggcggttaataggctgcctacgcttggaagcctcctggtcccctccgtccttctgaggtgtttcgattagctcgcattatacaggaac'

# d = levDistance(a,b)
# print(d)